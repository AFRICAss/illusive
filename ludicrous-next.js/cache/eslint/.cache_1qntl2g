[{"/home/runner/Illusive/pages/404.tsx":"1","/home/runner/Illusive/pages/_app.tsx":"2","/home/runner/Illusive/pages/api/apps.ts":"3","/home/runner/Illusive/pages/collection.tsx":"4","/home/runner/Illusive/pages/config.ts":"5","/home/runner/Illusive/pages/encoding.ts":"6","/home/runner/Illusive/pages/home.tsx":"7","/home/runner/Illusive/pages/index.tsx":"8","/home/runner/Illusive/pages/route.tsx":"9","/home/runner/Illusive/pages/service/dip/[url].tsx":"10","/home/runner/Illusive/pages/service/uv/[url].tsx":"11","/home/runner/Illusive/pages/settings.tsx":"12"},{"size":1454,"mtime":1658340352231,"results":"13","hashOfConfig":"14"},{"size":251,"mtime":1657947538560,"results":"15","hashOfConfig":"14"},{"size":1265,"mtime":1658193014456,"results":"16","hashOfConfig":"14"},{"size":5309,"mtime":1658340346123,"results":"17","hashOfConfig":"14"},{"size":1103,"mtime":1658272238954,"results":"18","hashOfConfig":"14"},{"size":1507,"mtime":1657923022767,"results":"19","hashOfConfig":"14"},{"size":5734,"mtime":1658340334395,"results":"20","hashOfConfig":"14"},{"size":12963,"mtime":1658356547511,"results":"21","hashOfConfig":"14"},{"size":935,"mtime":1658356696851,"results":"22","hashOfConfig":"14"},{"size":454,"mtime":1657923022767,"results":"23","hashOfConfig":"14"},{"size":462,"mtime":1657923022767,"results":"24","hashOfConfig":"14"},{"size":1376,"mtime":1658356413343,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yr6aym",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/runner/Illusive/pages/404.tsx",[],[],"/home/runner/Illusive/pages/_app.tsx",[],[],"/home/runner/Illusive/pages/api/apps.ts",[],[],"/home/runner/Illusive/pages/collection.tsx",["67","68"],[],"import type { NextComponentType, NextPage, NextPageContext } from 'next'\nimport Head from 'next/head'\nimport { IoAppsSharp, IoHomeOutline, IoSettingsOutline, IoFolder } from \"react-icons/io5\";\nimport Image from 'next/image'\nimport { useState } from 'react'\nimport styles from '../styles/Apps.module.css'\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport Script from 'next/script';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst Close: Function = () => {\n  if (global.window) {\n    if (global.window.opener) global.window.close();\n    global.window.history.go(-(global.window.history.length-1));\n    global.window.history.location.replace('https://www.google.com/webhp')\n  }\n}\n\nconst aboutBlank: Function = (event) => {\n  if (global.window) {\n    var openWin = global.window.open('about:blank');\n\n    openWin.document.write('<head><title>Classes</title><link rel=\"icon\" type=\"image/png\" href=\"https://ssl.gstatic.com/classroom/favicon.png\"><style>body {margin:0;overflow:hidden}</style></head><body><iframe width=\"100%\" height=\"100%\" src=\"' + global.window.location.href + '\" frameborder=\"0\"></iframe></body>');\n    openWin.document.close();\n\n    Close();\n  }\n}\n\nif (global.window) {\n  window.onload = function(e) {\n    var contextElement = document.getElementById(styles[\"context-menu\"]);\n\t\twindow.addEventListener(\"contextmenu\",function(event){\n\t\t  event.preventDefault();\n\n\t\t\tcontextElement.style.top = event.clientY + \"px\";\n\t\t  contextElement.style.left = event.clientX + \"px\";\n\t\t  contextElement.classList.add(styles.active);\n\t\t});\n\n    contextElement.addEventListener('mouseover', ()=>contextElement.over=true);\n    contextElement.addEventListener('mouseout', ()=>contextElement.over=false);\n\n    window.addEventListener('click', () => {\n      if (contextElement.over) return;\n      contextElement.classList.remove(styles.active);\n    });\n  }\n}\n\nconst FilterDisplayApps = (apps, p) => {\n\tvar applications = [];\n\tvar shownSep = false;\n\tvar i = 0;\n\tapps.forEach(app => {\n\t\tif (!shownSep) {\n\t\t\tshownSep = (app.type == \"sep\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (shownSep) {\n\t\t\tapplications.push(app);\n\t\t}\n\t})\n\n\tif (!p)\n\t\treturn apps;\n\telse\n\t\treturn applications;\n}\n\nconst GoToURL = (uri) => {\n\tif (!uri.startsWith(\"https://\")) {\n  \turi = encodeURIComponent(\"https://google.com/search?q=\"+(decodeURIComponent(uri)));\n\t} else if(uri.startsWith(\"https://\") || uri.startsWith(\"http://\")) {\n\t\turi = \"/route?query=\"+encodeURIComponent(decodeURIComponent(uri));\n\t}\n\n\tdocument.location = uri;\n}\n\nconst getAppsFromPath = (apps, dir)=> {\n\tvar applications = [];\n\tapps.map(app=>{\n\t\tif (app.type == \"folder\") {\n\t\t\tif (app.id == dir) {\n\t\t\t\tapplications = app.contents;\n\t\t\t}\n\t\t}\n\t})\n\t\n\treturn applications;\n}\n\nconst Apps: NextPage = ({ apps }) => {\n  const Router = useRouter();\n\n\tvar AppPath = (Router.query.dir);\n\tvar isPath = true\n\tif (typeof AppPath == \"undefined\") {\n\t\tAppPath = \"All\";\n\t\tvar applications = apps;\n\t} else {\n\t\tisPath = false;\n\t\tvar applications = getAppsFromPath(apps, AppPath);\n\t}\n\n  const particlesInit = async (main) => {await loadFull(main)};\n\n  const particlesLoaded = () => {};\n\n  return (\n    <div className={styles.main}>\n      <Head>\n        <title>Illusive</title>\n        <meta name=\"description\" content=\"Illusive | Gateway to Evading Censorship\" />\n        <meta name=\"theme-color\" content=\"#2467a5\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <main className={styles.main}>\n\t\t\t\t<div id={styles['context-menu']}>\n\t        <div className={styles.divider}></div>\n\t        <div className={styles.item}><i className={`${styles.uil} ${styles['uil-redo']}`}></i>Refresh</div>\n\t        <div className={styles.item}><i className=\"uil uil-share\"></i>Share</div>\n\t        <div className={styles.divider}></div>\n\t        <div className={styles.item}><i className=\"uil uil-trash\"></i>Delete</div>\n\t        <div className={styles.item}><i className=\"uil uil-setting\"></i>Settings</div>\n\t   \t\t</div>\n      \n\t\t\t\t<h1><a onClick={((e)=>{document.location.href = document.location.origin+\"/collection\"})}>Collection</a> / <mark>{AppPath}</mark></h1>\n\t\t\t\t<hr></hr>\n        <div className={styles.apps}>\n          {\n            FilterDisplayApps(applications, isPath).map(app => {\n\t\t\t\t\t\t\tif (app.col=='false') return (<></>);\n              return (\n                <div key={app.id} className={styles.app} onClick={((e)=>{\n\t\t\t\t\t\t\t\t\tif (app.type == \"folder\") {\n\t\t\t\t\t\t\t\t\t\tdocument.location.href = location.origin + \"/collection/?dir=\"+app.id;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tdocument.location = app.url;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}>\n                  <img src={app.image} width=\"100px\"/>\n\t\t\t\t\t\t\t\t\t<h2>{app.name}</h2>\n                </div>\n              )\n            })\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nApps.getInitialProps = async function( { req } ) {\n\n  if (req) {\n    const protocol = req.headers['x-forwarded-proto'] || 'http'\n    const baseUrl = req ? `${protocol}://${req.headers.host}` : ''\n  \n    const res = await fetch(baseUrl + '/api/apps')\n    const json = await res.json();\n\n    return {apps: json}\n  } else if (global.window) {\n  \n    const res = await fetch(global.window.location.origin + '/api/apps')\n    const json = await res.json();\n\n    return {apps: json}\n  }\n}\n\n\nexport default Apps","/home/runner/Illusive/pages/config.ts",["69"],[],"import * as enc from './encoding.ts';\n\nconst Encoding = {...enc.default}\n\nexport default {\n  proxy: 'Ultraviolet',\n  config: {\n    'Ultraviolet': {\n      prefix: '/service/uv/',\n      bare: 'https://uv.holyub.xyz/',\n      encodeUrl: (e=>decodeURIComponent(Encoding.base64.encode(e).replace(/\\/$/g,''))),\n      decodeUrl: (e=>decodeURIComponent(Encoding.base64.decode(e).replace(/\\/$/g,''))),\n      handler: '/uv/uv.handler.js',\n      bundle: '/uv/uv.bundle.js',\n      config: '/uv/uv.config.js',\n      sw: '/uv/uv.sw.js',\n    },\n    'Dynamic': {\n      prefix: '/service/dip/',\n      encoding: 'base64',\n      ws: true,\n      encodeUrl: Encoding.base64.encode,\n      decodeUrl: Encoding.base64.decode,\n      cookies: true,\n      worker: true,\n      bare: {\n        version: 2,\n        path: 'https://uv.holyub.xyz/',\n      },\n      tab: {\n        title: 'Dynamic Interception Proxy',\n        icon: 'https://google.com/favicon.ico',\n        ua: 'Mozilla/5.0 (X11; CrOS x86_64 14388.61.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.107 Safari/537.36'\n      }\n    },\n    'Rammerhead': {},\n  }\n}","/home/runner/Illusive/pages/encoding.ts",["70"],[],"const xor: Object = {\n  key: 2,\n  encode(str: String | undefined, key: Number | String | undefined) {\n    if (!key) key = xor.key;\n    if (!str) return str;\n    var encoded = encodeURIComponent((str).split('').map((char,ind)=>ind%key?String.fromCharCode(char.charCodeAt()^key):char).join(''));\n    if (!encoded.endsWith('/')) return encoded+'/';\n    else return encoded\n  },\n  decode(str: String | undefined, key: Number | String | undefined) {\n    if (!key) key = xor.key;\n    if (!str) return str;\n    str = str.replace(new RegExp('\\/$', 'g'), '');\n    var encoded = (decodeURIComponent(str).split('').map((char, ind) => ind % 2 ? String.fromCharCode(char.charCodeAt() ^ 2) : char).join(''));\n    return encoded;\n  }\n}\n\nconst plain: Object = {\n  encode(str: String | undefined) {\n    if (!str) return str;\n    var encoded = (str)\n    return encoded;\n  },\n  decode(str: String | undefined) {\n    if (!str) return str;\n    var encoded = decodeURIComponent(decodeURIComponent(str));\n    return str.replace('https://','https:/').replace('https:/','https://');\n  }\n}\n\nconst base64: Object = {\n  encode(str: String | undefined) {\n    if (!str) return str;\n    var encoded = btoa(encodeURIComponent(str));\n    if (!encoded.endsWith('/')) return encoded+'/';\n    else return encoded\n  },\n  decode(str: String | undefined) {\n    if (!str) return str;\n    str = str.replace(new RegExp('\\/$', 'g'), '');\n    var encoded = decodeURIComponent(atob(str));\n    return encoded;\n  }\n}\n\nexport default {xor, plain, base64};","/home/runner/Illusive/pages/home.tsx",["71","72","73","74","75","76","77","78"],[],"import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport { IoAppsOutline, IoSettingsOutline, IoChevronDown } from \"react-icons/io5\";\nimport { FaGithub, FaEyeSlash } from \"react-icons/fa\";\nimport Image from 'next/image'\nimport { useState } from 'react'\nimport styles from '../styles/Main.module.css'\nimport HomeStyles from '../styles/Home.module.css'\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport Script from 'next/script';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { AnimateOnChange } from '@nearform/react-animation';\n\nconst cancelEvent: Function = (e) => {\n  e.preventDefault();\n}\n\nconst openApplication: Function = (action, e, Router) => {\n  \n  var frame = window.parent.document.getElementsByClassName(HomeStyles[\"main-frame\"])[0].querySelector('iframe');\n  if (action=='proxy') {\n    frame.src = \"/route?query=\"+encodeURIComponent(decodeURIComponent(e));\n  }\n  else if (action=='redirect') frame.src = e;\n  else if (action=='home') {\n    frame.src = \"/home\";\n  } else if (action=='route') {\n    Router.replace(e)\n  }\n  else frame.src = e;\n}\n\nconst Home: NextPage = ({ apps }) => {\n  var Router = useRouter();\n\n  const clickEvent: Function = (mode, e, event) => {\n    cancelEvent(event);\n  \n    openApplication(mode, e, Router);\n  }\n    \n  const Apps: Function = () => {\n    if (global.window) {\n      Router.replace('/apps')\n    }\n  }\n  const Settings: Function = () => {\n    if (global.window) {\n      Router.replace('/options')\n    }\n  }\n  const particlesInit: Function = async (main) => {await loadFull(main)};\n  const particlesLoaded: Function = () => {};\n\t\n\tif (typeof window !== \"undefined\") {\n    var contextElement = document.getElementById(styles[\"context-menu\"]);\n\t\twindow.addEventListener(\"contextmenu\",function(event){\n\t\t  event.preventDefault();\n\n\t\t\tcontextElement.style.top = event.clientY + \"px\";\n\t\t  contextElement.style.left = event.clientX + \"px\";\n\t\t  contextElement.classList.add(styles.active);\n\t\t});\n\n    contextElement.addEventListener('mouseover', ()=>contextElement.over=true);\n    contextElement.addEventListener('mouseout', ()=>contextElement.over=false);\n\n    window.addEventListener('click', () => {\n      if (contextElement.over) return;\n      contextElement.classList.remove(styles.active);\n    });\n\t}\t\n\treturn (\n    <div className={styles.main}>\n      <Head>\n        <title>Illusive | Frame Page</title>\n        <meta name=\"description\" content=\"Illusive | Gateway to Evading Censorship\" />\n        <meta name=\"theme-color\" content=\"#565656\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <meta property=\"og:image\" content=\"/favicon.ico\" />\n      </Head>\n  \t\t\n      <main className={styles.main}>\n\t\t\t\t<div id={styles['context-menu']}>\n\t        <div className={styles.divider}></div>\n\t        <div className={styles.item}><i className={`${styles.uil} ${styles['uil-redo']}`}></i>Refresh</div>\n\t        <div className={styles.item}><i className=\"uil uil-share\"></i>Share</div>\n\t        <div className={styles.divider}></div>\n\t        <div className={styles.item}><i className=\"uil uil-trash\"></i>Delete</div>\n\t        <div className={styles.item}><i className=\"uil uil-setting\"></i>Settings</div>\n\t   \t\t</div>\n\t\t\t\t\n        <Particles\n          id=\"tsparticles\"\n          init={particlesInit}\n          loaded={particlesLoaded}\n          options={{\n            fpsLimit: 120,\n            interactivity: {\n              events: {\n                resize: true,\n              },\n            },\n            particles: {\n              color: {\n                value: \"#ffff\",\n              },\n              move: {\n                direction: \"right\",\n                enable: true,\n                outModes: {\n                  default: \"out\",\n                },\n                random: false,\n                speed: 0.673,\n                straight: false,\n              },\n              number: {\n                density: {\n                  enable: true,\n                  area: 800,\n                },\n                value: 48,\n              },\n              opacity: {\n                value: 0.6814501258678471,\n                random: true,\n                anim: {\n                  enable: true,\n                  speed: 0.24362316369040352,\n                  opacity_min: 0.03248308849205381,\n                  sync: false\n                }\n              },\n              shape: {\n                type: \"circle\",\n              },\n              size: {\n                anim: {\n                  enable: true,\n                  speed: 2.872463273808071,\n                  size_min: 2.436231636904035,\n                  sync: false\n                },\n                value: { min: 2, max: 3 },\n              },\n            },\n            detectRetina: true,\n          }}\n        />\n\n        <div className={styles['main-se']}>\n          <img src=\"/Illusive.png\" className={styles.img} />\n          <div className={styles['main-box']}>\n            <a className={styles['box-icon']} onClick={((e)=>clickEvent(\"proxy\", \"https://twitter.com\", e))}>\n              <img className={styles['qlimg']} src=\"/img/home/twitter.png\" />\n            </a>\n            <a className={styles['box-icon']} onClick={((e)=>clickEvent(\"proxy\", \"https://discord.com\", e))}>\n              <img className={styles['qlimg']} src=\"/img/home/discord.png\" style={{width:'25px',height:'25px'}}/>\n            </a>\n            <a className={styles['box-icon']} onClick={((e)=>clickEvent(\"route\", \"/settings\", e))}>\n              <img className={styles['qlimg']} src=\"/img/home/gear.png\" style={{width:'25px',height:'25px'}}/>\n            </a>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Home","/home/runner/Illusive/pages/index.tsx",["79","80","81","82","83"],[],"import type { NextPage } from 'next'\nimport Head from 'next/head'\nimport { IoAppsOutline, IoSettingsOutline, IoChevronDown, IoArrowBackOutline, IoArrowForwardOutline, IoReloadOutline, IoStar } from \"react-icons/io5\";\nimport { FaGithub, FaEyeSlash } from \"react-icons/fa\";\nimport Image from 'next/image'\nimport { useState } from 'react'\nimport styles from '../styles/Home.module.css'\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport Script from 'next/script';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { AnimateOnChange } from '@nearform/react-animation';\n\n// const formSubmit: Function = (e) => {\n//   if(e.keyCode === \"13\") {\n//     e.preventDefault();\n//     if (global.window) {\n//       var uri = document.querySelector('#submit-form').innerHTML;\n//       var removeHandeler = uri.slice((Math.max(uri.lastIndexOf(\"://\"))) + 3);\n//   \t\tvar frame = document.getElementsByClassName(styles[\"main-frame\"])[0].querySelector('iframe');\n//   \t\tif (!uri.startsWith(\"https://\")) {\n//   \t\t\turi = encodeURIComponent(\"https://google.com/search?q=\"+(decodeURIComponent(uri)));\n//   \t\t}\n//   \t\tframe.src = \"/route?query=\"+encodeURIComponent(decodeURIComponent(uri));\n//     }\n//   }\n// }\n\nconst openApplication: Function = (action, e, Router) => {\n  \n  var frame = window.parent.document.getElementsByClassName(styles[\"main-frame\"])[0].querySelector('iframe');\n  if (action=='proxy') {\n    frame.src = \"/route?query=\"+encodeURIComponent(decodeURIComponent(e));\n  }\n  else if (action=='redirect') frame.src = e;\n  else if (action=='home') {\n    frame.src = \"/home\";\n  } else if (action=='route') {\n    Router.replace(e)\n  }\n  else frame.src = e;\n}\n\nconst toggleDrop: Function = (e) => {\n  var el = document.getElementById('dropdown');\n\t\n  var el2 = document.getElementsByClassName(styles[\"main-frame\"])[0];\n  var el3 = document.getElementById('apps');\n\n\n  if (el3.classList.contains(styles['flex-vis'])) {\n    var og = el3.style.animation+'';\n    el3.style.animation = `${styles['cl']} 0.4s`;\n    el3.style.display = \"flex\"\n\n    setTimeout(function() {\n      el3.style.display = 'none'\n      el3.style.animation = og;\n    }, 400)\n  }\n  el3.classList.toggle(styles['flex-vis']);\n  el.classList.toggle(styles['apps-up']) \n  el2.classList.toggle(styles['apps-down'])\n  el2.classList.toggle(styles['apps-up'])\n}\n\nconst cancelEvent: Function = (e) => {\n  e.preventDefault();\n}\n\nif (typeof window !== \"undefined\") {\n  window.onload = function(e) {\n    var contextElement = document.getElementById(styles[\"context-menu\"]);\n\t\twindow.addEventListener(\"contextmenu\",function(event){\n\t\t  event.preventDefault();\n\n\t\t\tcontextElement.style.top = event.clientY + \"px\";\n\t\t  contextElement.style.left = event.clientX + \"px\";\n\t\t  contextElement.classList.add(styles.active);\n\t\t});\n\n    contextElement.addEventListener('mouseover', ()=>contextElement.over=true);\n    contextElement.addEventListener('mouseout', ()=>contextElement.over=false);\n\n    window.addEventListener('click', () => {\n      if (contextElement.over) return;\n      contextElement.classList.remove(styles.active);\n    });\n    \n    // Dropdown\n    /*window.addEventListener('mouseout', function(e) {\n      var y = e.clientY;\n      var target = 1;\n      var el = document.getElementById('dropdown');\n      var a = document.getElementsByClassName(styles['main-frame'])[0];\n      if (y < target) {\n        if (a.classList.contains(styles['apps-up'])) toggleDrop()\n      } else {\n        \n      }\n    })*/\n    \n    /*window.addEventListener(\"mousemove\", function(e) {\n      var y = e.clientY;\n      var target = 30;\n      var el = document.getElementById('dropdown');\n      var a = document.getElementsByClassName(styles['main-frame'])[0];\n      if (y < target) {\n        if (a.classList.contains(styles['apps-down'])) toggleDrop()\n      } else {\n        if (a.classList.contains(styles['apps-up'])) toggleDrop()\n      }\n    });*/\n\n      var urlbar = document.getElementById(\"urlbar\")\n      urlbar.addEventListener('focus', (e) => {\n        \n      })\n      urlbar.addEventListener(\"keyup\", (e) => {\n        if (urlbar.innerText.trim()) urlbar.setAttribute('val', 'true'); else urlbar.removeAttribute('val');\n        if(e.keyCode === 13) {\n          e.preventDefault();\n            document.getElementById('urlbar').blur()\n            document.getElementById('urlbar').innerHTML = (document.getElementById('urlbar').innerHTML.replace(new RegExp(`<span class=\"${styles['marking']}\">(.*?)<\\/span>`, 'gi'), '$1'))\n            var uri = document.getElementById('urlbar').innerText;\n            var removeHandler = uri.slice((Math.max(uri.lastIndexOf(\"://\"))) + 3);\n  \t\t      var frame = document.getElementsByClassName(styles[\"main-frame\"])[0].querySelector('iframe');\n  \t\t      if (!uri.startsWith(\"https://\")) {\n  \t\t\t      uri = encodeURIComponent(\"https://google.com/search?q=\"+(decodeURIComponent(uri)));\n  \t\t      } else if(uri.startsWith(\"https://\") || uri.startsWith(\"http://\")) {\n              if(uri.startsWith(\"https://\")) {\n                document.getElementById('urlbar').innerHTML = \"\"\n                document.getElementById('urlbar').innerHTML = `<span class=\"${styles['marking']}\">https://</span>${removeHandler}`\n              } else if(uri.startsWith(\"http://\")) {\n                document.getElementById('urlbar').innerHTML = \"\"\n                document.getElementById('urlbar').innerHTML = `<span class=\"${styles['marking']}\">http://</span>${removeHandler}`\n              }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tframe.src = \"/route?query=\"+encodeURIComponent(decodeURIComponent(uri));\n        }\n    })\n\t\t\n    // Clock\n    setInterval(function(){\n      var clock = document.getElementById(\"clock\");\n      var x = new Date()\n      var ampm = x.getHours() >= 12 ? ' PM' : ' AM';\n      var t = x.getHours();\n      if (t >= 12) t = t - 12;\n      if (t == 0) t = 12;\n  \n      var minutes = x.getMinutes();\n      if (minutes.toString().length==1) minutes = \"0\"+minutes;\n  \n      var x1 = t + \":\" + minutes + ampm;\n      clock.innerText = x1;\n    }, 300);\n  }\n}\n\nconst toggleTabs: Function = () => {\n\tvar el = document.getElementsByClassName(styles['historyTab'])[0];\n  var tabbyBTN = document.getElementById(\"tabby\");\n\tif (el.id == \"noactive\") {\n    tabbyBTN.style.fill = \"#3479FF\"\n\t\tel.id=\"active\";\n\t} else if(el.id == \"active\"){\n\t\tel.id=\"noactive\";\n    tabbyBTN.style.fill = \"white\"\n\t}\n}\n\n//there are already endpoints for this /route.tsx\nconst Home: NextPage = ({ apps }) => {\n  var Router = useRouter();\n  \n  const Apps: Function = () => {\n    if (global.window) {\n      Router.replace('/apps')\n    }\n  }\n  const Settings: Function = () => {\n    if (global.window) {\n      Router.replace('/options')\n    }\n  }\n  const particlesInit: Function = async (main) => {await loadFull(main)};\n  const particlesLoaded: Function = () => {};\n\n\tconst backup = console.warn;\n\n\tconsole.warn = function filterWarnings(msg) {\n\t  const supressedWarnings = ['warning text', 'other warning text'];\n\t\n\t  if (!supressedWarnings.some(entry => msg.includes(entry))) {\n\t    backup.apply(console, arguments);\n\t  }\n\t};\n\t\n\tconst tabs = [\n\t\t{\n\t\t\turl: 'https://google.com',\n\t\t\ttitle: 'Google'\n\t\t}\n\t]\n\n  return (\n    <div className={styles.main} data-theme=\"classic\">\n      <Head>\n        <title>Illusive</title>\n        <meta name=\"description\" content=\"Illusive | Gateway to Evading Censorship\" />\n        <meta name=\"theme-color\" content=\"#565656\" />\n        <link rel=\"icon\" href=\"/Illusive.png\" />\n        <meta property=\"og:image\" content=\"/favicon.ico\" />\n      </Head>\n  \t\t\n      <main className={styles.main}>\n\t\t\t\t<div id={styles['context-menu']}>\n\t        <div className={styles.divider}></div>\n\t        <div className={styles.item}><i className={`${styles.uil} ${styles['uil-redo']}`}></i>Refresh</div>\n\t        <div className={styles.item}><i className=\"uil uil-share\"></i>Share</div>\n\t        <div className={styles.divider}></div>\n\t        <div className={styles.item}><i className=\"uil uil-trash\"></i>Delete</div>\n\t        <div className={styles.item}><i className=\"uil uil-setting\"></i>Settings</div>\n\t   \t\t</div>\n\n\t\t\t\t<div className={styles.historyTab} id=\"noactive\">\n\t\t\t\t\t<h1>Tabs</h1>\n\t\t\t\t\t<div className={styles['historyapps']}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttabs.map(tab=>{\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div key={tab.title.toLowerCase()} className={styles['historyapp']} onClick={((e)=>{openApplication(\"proxy\", tab.url, Router);toggleTabs();})}>\n\t\t\t\t\t\t\t\t\t\t<img src={\"/google.png\"}></img>\n\t\t\t\t\t\t\t\t\t\t<div className={styles['historyapptext']}>\n\t\t\t\t\t\t\t\t\t\t\t<p>{tab.title}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n        <div id=\"apps\" className={styles[\"apps\"]}>\n          {\n            apps.map(app => {\n              if (app.col=='false') return (<></>);\n              \n              if (app.type == 'sep') {\n                return (\n                  <div key={app.type} className={styles.separator}></div>\n                )\n              }\n\t\t\t\t\t\t\tif (app.type == \"app\") {\n\t              return (\n\t\t                <a key={app.name} onClick={cancelEvent}>\n\t\t  \t\t\t\t\t\t\t\t<div key={app.name} className={styles.app} onClick={((e)=>openApplication(app.action, app.url, Router))}>\n\t\t  \t\t\t\t\t\t\t\t\t<img style={{filter: app.filter||'invert(0)', width: (app.size+'px')||'30px', height: (app.size+'px')||'30px'}} src={app.image} alt={app.name}></img>\n\t\t  \t\t\t\t\t\t\t\t</div>\n\t\t                </a>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n            })\n          }\n        </div>\n\t\t\t\t\n        <div className={styles['apps-frame']}>\n          <div id=\"dropdown\" onClick={toggleDrop} className={`${styles['apps-dropdown']} dropdown`}>\n            <IoChevronDown />\n          </div>\n\t\t\t\t\t\n          <div id=\"main-frame\" className={`${styles[\"main-frame\"]} ${styles[\"apps-down\"]}`}>\n            <iframe id=\"frame\" src=\"/home\"></iframe>\n          </div>\n        </div>\n\t\t\t\t\n        <div className={styles['bottom-container']}>\n\t\t\t\t\t<div className={styles['bottom-left-menu']}>\n\t\t\t\t\t\t<svg onClick={((e)=>{toggleTabs()})} width=\"25\" height=\"25\" viewBox=\"0 0 34 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t<path id=\"tabby\" d=\"M28.6667 0.333332H12C10.674 0.333332 9.40219 0.860116 8.46451 1.7978C7.52682 2.73548 7.00004 4.00725 7.00004 5.33333V7H5.33337C4.00729 7 2.73552 7.52678 1.79784 8.46447C0.860158 9.40215 0.333374 10.6739 0.333374 12V28.6667C0.333374 29.9927 0.860158 31.2645 1.79784 32.2022C2.73552 33.1399 4.00729 33.6667 5.33337 33.6667H22C23.3261 33.6667 24.5979 33.1399 25.5356 32.2022C26.4733 31.2645 27 29.9927 27 28.6667V27H28.6667C29.9928 27 31.2646 26.4732 32.2022 25.5355C33.1399 24.5979 33.6667 23.3261 33.6667 22V5.33333C33.6667 4.00725 33.1399 2.73548 32.2022 1.7978C31.2646 0.860116 29.9928 0.333332 28.6667 0.333332ZM23.6667 28.6667C23.6667 29.1087 23.4911 29.5326 23.1786 29.8452C22.866 30.1577 22.4421 30.3333 22 30.3333H5.33337C4.89135 30.3333 4.46742 30.1577 4.15486 29.8452C3.8423 29.5326 3.66671 29.1087 3.66671 28.6667V17H23.6667V28.6667ZM23.6667 13.6667H3.66671V12C3.66671 11.558 3.8423 11.134 4.15486 10.8215C4.46742 10.5089 4.89135 10.3333 5.33337 10.3333H22C22.4421 10.3333 22.866 10.5089 23.1786 10.8215C23.4911 11.134 23.6667 11.558 23.6667 12V13.6667ZM30.3334 22C30.3334 22.442 30.1578 22.8659 29.8452 23.1785C29.5327 23.4911 29.1087 23.6667 28.6667 23.6667H27V12C26.9955 11.4314 26.8941 10.8678 26.7 10.3333H30.3334V22ZM30.3334 7H10.3334V5.33333C10.3334 4.8913 10.509 4.46738 10.8215 4.15482C11.1341 3.84226 11.558 3.66667 12 3.66667H28.6667C29.1087 3.66667 29.5327 3.84226 29.8452 4.15482C30.1578 4.46738 30.3334 4.8913 30.3334 5.33333V7Z\" fill=\"white\"/>\n\t\t\t\t\t\t</svg>\n\t        </div>\n\t\t\t\t\t\n\t        <div className={styles['user-form']}>\n\t          <img onClick={((e)=>{openApplication(\"home\",\"/home\",Router)})} src=\"/favicon.ico\" className={`${styles['icon-ico']}`}></img>\n\t          <div contentEditable=\"true\" className={styles['form-submit-main']} id=\"urlbar\"></div>\n\t          <div id=\"clock\" className={styles.clock}>10:00 PM</div>\n\t        </div>\n\t\t\t\t\t\n\t        <div className={styles['bottom-right-menu']}>\n\t          <IoArrowBackOutline className={styles['main-nav-icon']}/>\n\t          <IoArrowForwardOutline className={styles['main-nav-icon']}/>\n\t          <IoReloadOutline id='reload-frame' className={`${styles['main-nav-icon']} ${styles['reload-btn']}`}/>\n\t          <IoStar id='star-frame' className={`${styles['main-nav-icon']} ${styles['star-btn']}`}/>\n\t        </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nHome.getInitialProps = async function( { req } ) {\n\n  if (req) {\n    const protocol = req.headers['x-forwarded-proto'] || 'http'\n    const baseUrl = req ? `${protocol}://${req.headers.host}` : ''\n  \n    const res = await fetch(baseUrl + '/api/apps')\n    const json = await res.json();\n\n    return {apps: json}\n  } else if (global.window) {\n  \n    const res = await fetch(global.window.location.origin + '/api/apps')\n    const json = await res.json();\n\n    return {apps: json}\n  }\n}\n\nexport default Home","/home/runner/Illusive/pages/route.tsx",[],[],"/home/runner/Illusive/pages/service/dip/[url].tsx",[],[],"/home/runner/Illusive/pages/service/uv/[url].tsx",[],[],"/home/runner/Illusive/pages/settings.tsx",[],[],{"ruleId":"84","severity":1,"message":"85","line":146,"column":19,"nodeType":"86","endLine":146,"endColumn":55},{"ruleId":"87","severity":1,"message":"88","line":146,"column":19,"nodeType":"86","endLine":146,"endColumn":55},{"ruleId":"89","severity":1,"message":"90","line":5,"column":1,"nodeType":"91","endLine":38,"endColumn":2},{"ruleId":"89","severity":1,"message":"90","line":47,"column":1,"nodeType":"91","endLine":47,"endColumn":37},{"ruleId":"84","severity":1,"message":"85","line":155,"column":11,"nodeType":"86","endLine":155,"endColumn":61},{"ruleId":"87","severity":1,"message":"88","line":155,"column":11,"nodeType":"86","endLine":155,"endColumn":61},{"ruleId":"84","severity":1,"message":"85","line":158,"column":15,"nodeType":"86","endLine":158,"endColumn":78},{"ruleId":"87","severity":1,"message":"88","line":158,"column":15,"nodeType":"86","endLine":158,"endColumn":78},{"ruleId":"84","severity":1,"message":"85","line":161,"column":15,"nodeType":"86","endLine":161,"endColumn":114},{"ruleId":"87","severity":1,"message":"88","line":161,"column":15,"nodeType":"86","endLine":161,"endColumn":114},{"ruleId":"84","severity":1,"message":"85","line":164,"column":15,"nodeType":"86","endLine":164,"endColumn":111},{"ruleId":"87","severity":1,"message":"88","line":164,"column":15,"nodeType":"86","endLine":164,"endColumn":111},{"ruleId":"84","severity":1,"message":"85","line":235,"column":11,"nodeType":"86","endLine":235,"endColumn":36},{"ruleId":"87","severity":1,"message":"88","line":235,"column":11,"nodeType":"86","endLine":235,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":260,"column":14,"nodeType":"86","endLine":260,"endColumn":157},{"ruleId":"84","severity":1,"message":"85","line":287,"column":12,"nodeType":"86","endLine":287,"endColumn":130},{"ruleId":"87","severity":1,"message":"88","line":287,"column":12,"nodeType":"86","endLine":287,"endColumn":130},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]